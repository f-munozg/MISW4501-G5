version: '3'
services:
  ccp_db:
    image: postgres
    environment:
      POSTGRES_DB: maindb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "9432:5432"  # Exponer el puerto para acceso desde el host
    networks:
      - ccp_net
  customers:
    build: ./customers
    ports:
      - "5000:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      USERS_URL: http://users:5000
      SELLERS_URL: http://sellers:5000
      ORDERS_URL: http://orders:5000
      ROUTES_URL: http://routes:5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  orders:
    build: ./orders
    ports:
      - "5001:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      CUSTOMERS_URL: http://customers:5000
      STOCK_URL: http://stock:5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  products:
    build: ./products
    ports:
      - "5002:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  providers:
    build: ./providers
    ports:
      - "5003:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      PRODUCTS_URL: http://products:5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  reports:
    build: ./reports
    ports:
      - "5004:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      ORDERS_URL: http://orders:5000
      SELLERS_URL: http://sellers:5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  routes:
    build: ./routes
    ports:
      - "5005:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
      ORDERS_URL: http://orders:5000
      SELLERS_URL: http://sellers:5000
      CUSTOMERS_URL: http://customers:5000
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  sales:
    build: ./sales
    ports:
      - "5006:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      SELLERS_URL: http://sellers:5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  sellers:
    build: ./sellers
    ports:
      - "5007:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      USERS_URL: http://users:5000
      CUSTOMERS_URL: http://customers:5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  stock:
    build: ./stock
    ports:
      - "5008:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
      USERS_URL: http://users:5000
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

  users:
    build: ./users
    ports:
      - "5009:5000"
    environment:
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_HOST: ccp_db  # Conectarse al contenedor de la base de datos
      DB_PORT: 5432
      DB_NAME: maindb
      APP_PORT: 5000
      JWT_SECRET_KEY: abe4ab29-5811-4d9e-9b71-3a2dbd7add60
    networks:
      - ccp_net
    depends_on:
      ccp_db: 
        condition: service_started
        restart: true
    restart: always

networks:
  ccp_net:
    driver: bridge
    attachable: true