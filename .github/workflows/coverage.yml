name: Test_Coverage
on:
  pull_request:
    types: 
      - opened
      - reopened
      - synchronize
    branches: 
      - develop
      - main
jobs:
  test_customers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./customers
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./customers
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./customers
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./customers
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_orders:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./orders
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./orders
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./orders
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./orders
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_products:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./products
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./products
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./products
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./products
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_providers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./providers
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./providers
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./providers
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./providers
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_reports:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./reports
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./reports
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./reports
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./reports
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_routes:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./routes
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./routes
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./routes
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./routes
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_sales:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./sales
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./sales
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./sales
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./sales
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_sellers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./sellers
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./sellers
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./sellers
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./sellers
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_stock:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./stock
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./stock
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./stock
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./stock
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  test_users:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Save test variable to env variable
        run: echo "IS_UNIT_TEST=1" >> $GITHUB_ENV
      - name: Init virtual environment
        working-directory: ./users
        run: python -m venv ./venv
      - name: Enable environment
        working-directory: ./users
        run: source ./venv/bin/activate
      - name: Install dependencies
        working-directory: ./users
        run: pip install -r requirements.txt
      - name: Run unit tests
        working-directory: ./users
        run: pytest --cov=. -v -s --cov-fail-under=80 --disable-warnings
  